import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures

x = np.array([5, 15, 25, 35, 45, 55]).reshape((-1, 1))
y = np.array([15, 11, 2, 8, 25, 32])
#–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤—Ö–æ–¥–Ω–æ–π –º–∞—Å—Å–∏–≤, x—á—Ç–æ–±—ã –æ–Ω —Å–æ–¥–µ—Ä–∂–∞–ª –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Å—Ç–æ–ª–±–µ—Ü (—Å—Ç–æ–ª–±—Ü—ã) —Å–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ ùë•¬≤ (–∏, –≤ –∫–æ–Ω–µ—á–Ω–æ–º –∏—Ç–æ–≥–µ, –¥—Ä—É–≥–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏).
transformer = PolynomialFeatures(degree=2, include_bias=False)
#–ü–µ—Ä–µ–¥ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º transformer–µ–≥–æ –Ω—É–∂–Ω–æ –ø–æ–¥–æ–≥–Ω–∞—Ç—å .fit():
transformer.fit(x)
#–ü–æ—Å–ª–µ transformer—É—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ–Ω –≥–æ—Ç–æ–≤ –∫ —Å–æ–∑–¥–∞–Ω–∏—é –Ω–æ–≤–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–≥–æ –≤—Ö–æ–¥–∞. –í—ã –ø–æ–¥–∞–µ—Ç–µ –∑–∞—è–≤–∫—É .transform()–Ω–∞ —ç—Ç–æ:
x_ = transformer.transform(x)
#–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å .fit_transform()–¥–ª—è –∑–∞–º–µ–Ω—ã —Ç—Ä–µ—Ö –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∏–º:
x_ = PolynomialFeatures(degree=2, include_bias=False).fit_transform(x)
print(x_)

model = LinearRegression().fit(x_, y)

r_sq = model.score(x_, y)
print('coefficient of determination:', r_sq)
print('intercept:', model.intercept_)
print('coefficients:', model.coef_)
x_ = PolynomialFeatures(degree=2, include_bias=True).fit_transform(x)
print(x_)

model = LinearRegression(fit_intercept=False).fit(x_, y)
r_sq = model.score(x_, y)
print('coefficient of determination:', r_sq)
print('intercept:', model.intercept_)
print('coefficients:', model.coef_)

y_pred = model.predict(x_)
print('predicted response:', y_pred, sep='\n')